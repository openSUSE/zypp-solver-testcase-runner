INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR} ${KDE3_INCLUDE_DIR} ${QT_INCLUDE_DIR}  )


########### next target ###############

SET(media2_SRCS
media2.cc
mymediaverifier.h
)

KDE3_AUTOMOC(${media2_SRCS})

KDE3_ADD_EXECUTABLE(media2 ${media2_SRCS})

TARGET_LINK_LIBRARIES(media2  ${QT_AND_KDECORE_LIBS} )


########### next target ###############

SET(media3_SRCS
media3.cc
mymediaverifier.h
)

KDE3_AUTOMOC(${media3_SRCS})

KDE3_ADD_EXECUTABLE(media3 ${media3_SRCS})

TARGET_LINK_LIBRARIES(media3  ${QT_AND_KDECORE_LIBS} )


########### next target ###############

SET(media4_SRCS
media4.cc
mymediaverifier.h
)

KDE3_AUTOMOC(${media4_SRCS})

KDE3_ADD_EXECUTABLE(media4 ${media4_SRCS})

TARGET_LINK_LIBRARIES(media4  ${QT_AND_KDECORE_LIBS} )


########### next target ###############

SET(fileexists_SRCS
file_exists_test.cc
mymediaverifier.h
)

KDE3_AUTOMOC(${fileexists_SRCS})

KDE3_ADD_EXECUTABLE(fileexists ${fileexists_SRCS})

TARGET_LINK_LIBRARIES(fileexists  ${QT_AND_KDECORE_LIBS} boost_unit_test_framework )


########### next target ###############

SET(throw_if_not_exists_SRCS
throw_if_not_exists.cc
mymediaverifier.h
)

KDE3_AUTOMOC(${throw_if_not_exists_SRCS})

KDE3_ADD_EXECUTABLE(throw_if_not_exists ${throw_if_not_exists_SRCS})

TARGET_LINK_LIBRARIES(throw_if_not_exists  ${QT_AND_KDECORE_LIBS} boost_unit_test_framework )


########### next target ###############

SET(media1_SRCS
media1.cc
mymediaverifier.h
)

KDE3_AUTOMOC(${media1_SRCS})

IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(media1 ${media1_SRCS})

TARGET_LINK_LIBRARIES(media1  ${QT_AND_KDECORE_LIBS} boost_unit_test_framework )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(fileexists_SRCS
dummy.cpp
)

KDE3_AUTOMOC(${fileexists_SRCS})

FILE(WRITE dummy.cpp "//autogenerated file by cmake\n")
IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(fileexists ${fileexists_SRCS})

TARGET_LINK_LIBRARIES(fileexists  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### next target ###############

SET(throw_if_not_exists_SRCS
dummy.cpp
)

KDE3_AUTOMOC(${throw_if_not_exists_SRCS})

FILE(WRITE dummy.cpp "//autogenerated file by cmake\n")
IF(KDE3_BUILD_TESTS)

KDE3_ADD_EXECUTABLE(throw_if_not_exists ${throw_if_not_exists_SRCS})

TARGET_LINK_LIBRARIES(throw_if_not_exists  ${QT_AND_KDECORE_LIBS} )

ENDIF(KDE3_BUILD_TESTS)

########### install files ###############




#original Makefile.am contents follow:

### Process this file with automake to produce Makefile.in
### ##################################################
#
## Do NOT list devel.* in subdirs. It's developers playgound and
## must not prevent anything from building.
#SUBDIRS =
#
### ##################################################
#
#
#TESTS = media1 fileexists
#
#noinst_PROGRAMS = media2 media3 media4 fileexists throw_if_not_exists
#
#check_PROGRAMS = media1 fileexists throw_if_not_exists
#
#
### ##################################################
#
#LDADD =	$(top_srcdir)/zypp/lib@PACKAGE@.la 
#
### ##################################################
#
#media1_SOURCES = media1.cc mymediaverifier.h
#media1_LDADD = $(LDADD) -lboost_unit_test_framework
#
#fileexists_SOURCES = file_exists_test.cc mymediaverifier.h
#fileexists_LDADD = $(LDADD) -lboost_unit_test_framework
#
#media2_SOURCES = media2.cc mymediaverifier.h
#media2_LDADD = $(LDADD)
#
#media3_SOURCES = media3.cc mymediaverifier.h
#media3_LDADD = $(LDADD)
#
#media4_SOURCES = media4.cc mymediaverifier.h
#media4_LDADD = $(LDADD)
#
#throw_if_not_exists_SOURCES = throw_if_not_exists.cc mymediaverifier.h
#throw_if_not_exists_LDADD = $(LDADD) -lboost_unit_test_framework
#
### ##################################################
#
#.PHONY:        always
#
#$(noinst_PROGRAMS):    $(top_srcdir)/zypp/lib@PACKAGE@.la
#
##$(top_srcdir)/zypp/lib@PACKAGE@.la:     always
##	$(MAKE) -C $(top_srcdir)/zypp
#
### ##################################################