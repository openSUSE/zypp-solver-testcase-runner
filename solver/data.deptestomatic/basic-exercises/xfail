# requires without epoch is treated like 'any' epoch
exercise-25-test.xml
# requires without epoch is treated like 'any' epoch
exercise-26-test.xml
# requires without epoch is treated like 'any' epoch
exercise-29-test.xml
# requires without epoch is treated like 'any' epoch
exercise-32-test.xml
# Comparing 0:1.0.0-1 and 1.0.0-1 returns "true"
exercise-35-test.xml
# Comparing 0:1.0.0-1 and 1.0.0-1 returns "true"
exercise-36-test.xml
# Comparing 0:1.0.0-1 and 1.0.0-1 returns "true"
exercise-37-test.xml
# Comparing 0:1.0.0-1 and 1.0.0-1 returns "true"
exercise-38-test.xml
# duplicate solutions
exercise-39-test.xml
# requires without epoch is treated like 'any' epoch
exercise-40-test.xml
# requires without epoch is treated like 'any' epoch
exercise-44-test.xml
# or dependency
exercise-47-test.xml
# lock
exercise-58-test.xml

#
# to be fixed
#
exercise-46-test.xml
exercise-42-test.xml
exercise-10-test.xml
exercise-22-test.xml
#s390
exercise-20-test.xml
exercise-14-test.xml
exercise-1-test.xml
exercise-16-test.xml
exercise-23-test.xml
#Debian packages can provide something and conflict with that same
#thing.  It's Debian's way of showing that there can be one and
#only one provider of something.
exercise-60-test.xml
exercise-24-test.xml
