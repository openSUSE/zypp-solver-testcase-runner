Manual for deptestomatic-Tool

Type "make check" in ../libzypp/testsuite/solver/src/ and the deptestomatic-tool will execute all the test in ../libzypp/testsuite/solver/data.deptestomatic/ one by one.
If you want to run one test separatly just execute deptestomatic.multi (../libzypp/testsuite/solver/src/) with the test-file as option.

A test-scenario consists of two different files:

The test-file (<description>-test.xml) and the corresponding solution-file (<description>-solution.xml).

The test-file has to be in helix-xml-format. The exact buildup of such a file you will find at the end of this short description.
The solution-file has to include the expected output of deptestomatic.

Short instruction of all possible options to write a <description>-test.xml file
--------------------------------------------------------------------------------

<test>
   <!-- Multiple <setup>..</setup> sections not allowed! -->
   <setup arch="..."> <!-- Setting Architecture -->

	<forceResolve/>: <!-- force Resolve -->
		
	<maxSolverPasses value=".."/> <!-- sets the max solver passes -->
		
	<system file=".."/> // <!-- xml-file in helix-format which inlcudes the pre-installed packages -->
		
	<hardwareInfo path="..."/> <!-- setenv "ZYPP_MODALIAS_SYSFS" with the given path as value -->
	
	<channel name="..." file="..." type="..."/> <!-- activates a channel. type: url or leave it out -->
			
	<!-- channel is for helix-type xml-files and source for yast or repomd (yum) repositories -->			

	<source	url="..." name="..."/> <!-- like channel but with url as type -->
		
	<undump	file="..."/> <!-- undump not really supported -->

	<force-install channel="..." package="..." kind="..."/> <!-- forces install of the choosen package, ignore solver-problems -->
								<!-- channel has to be one of the before declared -->

	<force-uninstall package="..." kind="..."/> <!-- forces uninstall of the choosen package, ingore solver-problems -->
		
	<lock channel="..." package="..." kind="..."/> <!-- locks the choosen package from channel -->

	<mediaid/> <!-- shows the mediaid -->

	<locale	name="..."/> 

   </setup>
   
   <!-- Any trials must be preceeded by the setup! -->
   <!-- There has to be exactly one setup-section and at least on trial-section -->
   <trial>
   
	<note/> <!-- -->

	<verifiy/> <!-- the system will be verified by the resolver -->

	<current channel="..."> <!-- choosen channel will become the current one (NOT YET IMPLEMENTED) -->

	<subscribe channel="..."> <!-- subscribe choosen channel (NOT YET IMPLEMENTED) -->

	<install channel="..." name="..." package="..."	kind="..." soft="..."/> <!-- installs a package ?? SOFT -->
																			<!-- kind: package, pattern, patch or product. Default is package -->

	<uninstall name="..." package="..." kind="..." soft="..."/> <!-- uninstalls a package ?? SOFT -->

	<upgrade/> <!-- Upgrades the System -->

	<distupgrade delete_unmaintained="..."/> <!-- Distribution-Upgrade. delete_unmaintained: false: unmaintained packages will not be deleted -->

	<establish freshen="..."/> <!-- Establish state of 'higher level' Resolvables in Pool. freshen: !empty >> like the following freshen-option -->
	
	<freshen/> <!-- go through all package 'freshen' dependencies and schedule matches for installation -->

	<instorder/> <!-- calculates the installation order -->

	<maxSolverPasses value="..."/> <!-- sets the max solver passes -->

	<mediaorder/> <!-- calculates the media order -->

	<solvedeps/> <!-- solvedeps is disabled -->

	<whatprovides kind="..." provides="..."/> <!-- lists the packages which provides the choosen -->

	<whatdependson channel="..." package="..." kind="..." provides="..."/> <!-- lists the packages which depends on the choosen -->
										<!-- <whatdependson ...> can't have both: package or provides -->

	<addProvide kind="..." name="..."/> <!-- sets an additional Provide -->

	<addConflict kind="..." name="..."/> <!-- sets an additional Conflict -->

	<addRequire kind="..." name="..."/> <!-- sets an additional Require -->

	<reportproblems/> <!-- reports problems -->

	<takesolution problem="..." solution="..."/> <!-- takes the given solution number to solve the given problem number -->

	<showpool prefix="..." all="..."/> <!-- collect all objects in pool. With no given all only changing obejcts will be shown otherwise all  -->
	
	<lock channel="..." package="..." kind="..."/> <!-- locks the package from channel -->

	<availablelocales/> <!-- lists the available locales -->

	<transact name="..." package="..." kind="..." channel="..."/> <!-- if channel is not set package will be removed from system else package will be installed -->
									<!-- transact either takes 'name' or 'kind', but not both -->

   </trial>
</test>
